22/4 = 3h15min
- read 4 papers (1h)
- project setup (15min)
- histogram (2h)

23/4 = 6h
- rewrote histogram generation using additional Makefile and Octave (2h30min)
- finding non-linear function (1h30min)
- implementing non-linear function (2h) - strange bug ??

24/4 = 5h30min
- fixed bug in non-linear function (conversion to int8 instead of uint8) (30min)
- implemented automagical beta calculation (1h)
- implementation of create_enhanced_image.py + some clean up (repo) (2h)
- reading about top-hat transformations (1h30min)
- cleaned up Makefile (30min)

25/4 = 4h
- implementation of top/back hat filter (2h)
- implementation of cropping (1h)
- implementation of detection of upper/lower jaw (1h)

26/4 = 3h30min
- improved thresholding to focus on center using Gaussian probability (2h30min)
- implementation of piece-wise jaw-split detection (1h)

29/4 = 6h30min
- applied relative Gaussian probability on intensities (see paper 5) (1h30min)
- implemented spline interpolation (3h)
  detail:find a way to render splines on numpy array image (2h)
- clean up + implemented histogram along spline (1h)
- detection of valleys in between teeth  (1h)

30/4 = 5h 
- clean up and added code to isolate individual teeth (2h30min)
- extracted jaw_split from detect_splits (2h)
- extracted teeth_isolation from detect_splits - start (30min)

2/5 = 4h30min
- (continue) extracted teeth_isolation from detect_splits (3h)
- created visualize_ scripts (1h30min)
- find enclosing rectangles/ROI (started) (1h30)

3/5 = 1h
- find enclosing rectangles/ROI (completed) (1h)

6/5 = 3h
- implemented double jaw_split (upper/lower) (3h)
- changed roi data to include angle (30min)
- extracted reconstruct_spline_tuple (15min)
- tried to extract rotated rectangular ROI - failed (2h30min)

7/5 = 2h30
- implemented extraction of rotated rectangular ROI (2h)
- implemented histogram of extracted ROI (30min)

8/5 = 3h30
- changed teeth split detection to use length of teeth (1h30)
- changed ROI format and corrected computation (1h)
- fixed ROI extraction and histogram computation (1h)

17/5 = 8h30
- find way to define first gaussian component in histogram (8h30min)

18/5 = 3h
- implemented crown contour tracing (3h)

19/5 = 8h
- cleaned up crown contour tracing + automation + montage (3h)
- implemented root contour computation (2h)
- trying to remove outliers from point cloud - failed (3h)

20/5 = 7h
- report: document setup + description setup = overview diagram (2h30min)
- report: introduction, literature, strategie (3h30)
- report: implementation enhancement (1h)

21/5 = 3h
- extracted contrast-stretching parameter finding (1h)
- cleaned up Makefile (15min)
- cleaned up cropping (15min)
- implemented ui.py (started) (1h30min)

22/5 = 
- extracted create_histogram function (15min)
- extracted detect_teeth_splits (15min)
- finalised ui.py (1h30min)
- introduced crop_top_offset (1h)

---
total = 77h45
---

- report: implementation segmentation
- report: implementation contours
- report: results
- report: conclusion

- turn point cloud into actual contour, outliers removed ()
- presentation
- process TODO
